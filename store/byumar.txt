import { createSlice, PayloadAction, AnyAction, Draft, createAsyncThunk, ActionReducerMapBuilder } from "@reduxjs/toolkit";
import axios from "axios";
import { fetchProducts } from "./productsSlice";
import { supabase } from "@/integrations/supabase/client";


export type subcategory = {
id: number;
title: string;
title2: string;
description: string;
image_url: string;
main_category: string;
};

type SubcategoryState = {
    subcategories: subcategory[];
    loading: boolean;
    error: string | null;
}

const initialState: SubcategoryState = {
    subcategories: [],
    loading: false,
    error: null
}


export const fetchSubcategories = createAsyncThunk<subcategory[]> ('subcategories/fetchSubCategories',
    async ()=> {
        const response = await axios.get('https://dummyjson.com/products');
        return response.data.products;
    }
)


const subcategoriesSlice = createSlice({
    name: 'subcategories',
    initialState,
reducers:{},
extraReducers: (builder)=>{
    builder.addCase(fetchSubcategories.pending, (state) =>{
        state.loading = true;
        state.error = null;
    })
    .addCase(fetchSubcategories.fulfilled, (state, action)=>{
        state.loading = false;
        state.subcategories = action.payload;
    })
    .addCase(fetchSubcategories.rejected, (state, action)=>{
        state.loading = false;
        state.error = action.error?.message || "Failed To Fetch Sub Categories"; 
    })
}
})


export default subcategoriesSlice.reducer;